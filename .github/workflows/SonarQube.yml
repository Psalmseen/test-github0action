name: SonarQube
on:
  push:
    branches:
      - '**'
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
          - info
          - warning
          - debug
jobs:
  sonarqube:
    name: sonarqube
    runs-on: ubuntu-latest
    # ${{ matrix.os}}
    # strategy:
    #   matrix:
    #     os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: install dependencies
        run: npm i

      - name: run test coverage
        run: npm run coverage

      - name: sonarqube scan
        run: sonar-scanner.bat -D"sonar.projectKey=sample" -D"sonar.sources=." -D"sonar.host.url=http://localhost:9000" -D"sonar.login=sqp_2944a3447be64ae323654881715eb4f8eaaa0b0d"
      #   uses: SonarSource/sonarqube-scan-action@master
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
